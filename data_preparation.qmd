---
title: "Data collection"
format: html
editor: visual
---

# Setup

```{r setup}
library(tidyverse)
library(readxl)
library(igraph)
library(RSiena)
library(Matrix)
library(vdemdata)
library(countrycode)
```

# Data gathering

## Min/max year
```{r}
min_year <- 1949
max_year <- 2022
```


## Democracy
```{r}
dem <- vdem %>% filter(year >= min_year)

dem <- dem %>% 
  select(country_name:year, v2x_polyarchy, COWcode)

country_list <- sort(unique(dem$country_id))

```
## PTA data
```{r}
pta <- read_csv(url('https://www.designoftradeagreements.org/media/filer_public/2a/c7/2ac78d7d-9a73-471f-9693-e2b4a45d2b62/desta_list_of_treaties_02_02_dyads.csv')) %>% 
  mutate(id1 = countrycode(iso1, "iso3n", "vdem"), 
         id2 = countrycode(iso2, "iso3n", "vdem")) %>% 
  filter(!is.na(id1), !is.na(id2)) 


withdraw <- read_csv(url("https://www.designoftradeagreements.org/media/filer_public/0b/0c/0b0c56b0-00e7-4abc-af9e-15a88dfc9237/desta_dyadic_withdrawal_02_02.csv"), guess_max = 2000)%>% 
  mutate(id1 = countrycode(iso1, "iso3n", "vdem"), 
         id2 = countrycode(iso2, "iso3n", "vdem")) %>% 
  filter(!is.na(id1), !is.na(id2))
```


## Alliances
```{r}
## correlates of war
# download.file("https://correlatesofwar.org/wp-content/uploads/version4.1_csv.zip", destfile = "data/ally.zip")
# unzip("data/ally.zip", exdir = "data")
# #http://www.atopdata.org/additional-data.html?? geht immerhin bis 2018
# ally <- read_csv("data/version4.1_csv/alliance_v4.1_by_dyad_yearly.csv") %>% 
#   mutate(id1 = countrycode(ccode1, "cown", "vdem"), 
#          id2 = countrycode(ccode2, "cown", "vdem")) %>% 
#   filter(!is.na(id1), !is.na(id2), 
#          year >= 1948)

# ATOP
download.file("http://www.atopdata.org/uploads/6/9/1/3/69134503/atop_5.1__.csv_.zip", destfile = "data/ally_atop.zip")
unzip("data/ally_atop.zip", exdir = "data")

ally <- read_csv("data/ATOP 5.1 (.csv)/atop5_1dy.csv") %>% 
    mutate(id1 = countrycode(mem1, "cown", "vdem"),
           id2 = countrycode(mem2, "cown", "vdem")) %>%
    filter(!is.na(id1), !is.na(id2),
           year >= min_year)
```

## Distance
```{r}
dist <- download.file("http://www.cepii.fr/DATA_DOWNLOAD/gravity/data/Gravity_rds_V202211.zip", destfile = "data/dist.zip")
unzip("data/dist.zip", exdir = "data/dist")
dist <- readRDS("data/dist/Gravity_V202211.rds")

dist <- dist %>% 
  mutate(id1 = countrycode(iso3num_o, "iso3n","vdem"), .after = iso3num_o) %>% 
  mutate(id2 = countrycode(iso3num_d, "iso3n","vdem"), .after = iso3num_d) %>% 
  filter(id1 %in% country_list, id2 %in% country_list) 
```


## GDP
```{r}
gdp <- dist %>% 
  select(id1, gdp = gdp_o, year) %>% 
  distinct()
```


## Trade
```{r}
trade <- dist %>% 
  select(year, id1, id2, tradeflow_comtrade_o, tradeflow_imf_o)
```


#Data preparation 

## pta network
```{r}

pta_list <- map(min_year:max_year, function(y){
  draw <- withdraw %>% 
    filter(year <= y) %>% 
    select(id1, id2, base_treaty)
  
  subset <- pta %>% 
    filter(year <= y) %>% 
    select(id1, id2, base_treaty)
  
  # disregard the edge, if any of the two parties withdrew from the treaty in the the given or a previous year
  if(nrow(draw) > 0){
    subset <- subset %>% 
      rowwise() %>% 
      filter(max((draw$id1 == id1 | draw$id2 == id1) + 
                   (draw$id1 == id2 | draw$id2 == id2) + 
                   (draw$base_treaty == base_treaty)) < 3 | (nrow(draw) == 0)) %>% 
      ungroup()
  }
  
  graph <- subset %>% 
    select(id1, id2) %>%
    graph_from_data_frame(directed = F, vertices = country_list) %>%
    # to avoid multiple connections between countries
    simplify() %>% 
    igraph::get.adjacency(sparse = T, type='both') %>%
    as(., 'TsparseMatrix')
  
  # set structural zeros
  graph[!rownames(graph) %in% dem$country_id[dem$year == y],] <- 10
  graph[,!colnames(graph) %in% dem$country_id[dem$year == y]] <- 10
  diag(graph) <- 0
  
  return(graph)
}, .progress = TRUE) 

pta_depend <- sienaDependent(pta_list, allowOnly = FALSE, sparse = T)


```



## Democracy
```{r}
dem <- dem %>% 
  mutate(poly_ord = round(v2x_polyarchy, 1)*10)

dem_depend <- dem %>% 
  filter(year >= min_year) %>% 
  arrange(country_id, year) %>% 
  select(country_id, poly_ord, year) %>% 
  pivot_wider(values_from = poly_ord, names_from = year) %>% 
  column_to_rownames("country_id") %>% 
  as.matrix() %>% 
  sienaDependent(type = "behavior", sparse = F)
  

```

## Alliances
```{r}
## Expand beyond 2018
ally <- ally %>% 
  select(year, id1, id2)

missing_years <- map_dfr(2019:2021, function(y) {
  ally %>% filter(year == 2018) %>% mutate(year = y)
  })

ally_complete <- ally %>% bind_rows(missing_years)


ally_list <- map(min_year:(max_year-1), function(y){

  subset <- ally %>% 
    filter(year <= y) %>% 
    select(id1, id2)
  
  
  graph <- subset %>% 
    select(id1, id2) %>%
    graph_from_data_frame(directed = F, vertices = country_list) %>%
    # to avoid multiple connections between countries
    simplify() %>% 
    igraph::get.adjacency(sparse = T, type='both') %>%
    as(., 'TsparseMatrix')
  
  # set structural zeros
  graph[!rownames(graph) %in% dem$country_id[dem$year == y],] <- 10
  graph[,!colnames(graph) %in% dem$country_id[dem$year == y]] <- 10
  diag(graph) <- 0
  
  return(graph)
}, .progress = TRUE) 

ally_covar <- varDyadCovar(ally_list, warn = FALSE)
```

## Distance
```{r}

recent_dist <- dist %>% 
  filter(!is.na(distw_harmonic)) %>% 
  mutate(pair_id = paste0(pmin(id1, id2), "_", pmax(id1, id2))) %>% 
  filter(year == max(year), .by = pair_id)

#missing countries 
miss_cntr <- country_list[!country_list %in% recent_dist$id1]
miss_cntr_df <- expand.grid(id1 = miss_cntr, id2 = miss_cntr)

dist_m <- recent_dist %>% 
  select(id1, id2, distw_harmonic) %>% 
  full_join(miss_cntr_df) %>%
  complete(id1, id2) %>% 
  arrange(id1, id2) %>% 
  pivot_wider(values_from = distw_harmonic, names_from = id2, values_fill = NA) %>% 
  column_to_rownames("id1") %>% 
  as.matrix()

diag(dist_m) <- 0

#divide by thousand kilometers to make sd small enough
dist_covar <- coDyadCovar(dist_m/1000, sparse = F)
```

## GDP
```{r}
miss_cntr <- country_list[!country_list %in% gdp$id1]

gdp_m <- gdp %>% 
  filter(!is.na(gdp)) %>% 
  bind_rows(tibble(id1 = miss_cntr)) %>% 
  complete(id1, year) %>% 
  filter(!is.na(year)) %>% 
  pivot_wider(values_from = gdp, names_from = year) %>% 
  column_to_rownames("id1") %>% 
  as.matrix()

# billions of dollars
gdp_inv <- 1/(gdp_m/1000000)

gdp_covar <- gdp_inv %>% varCovar()

```

## Trade
```{r}

trade_list <- map(min_year:(max_year-1), function(y){
  
  subset <- trade %>% 
    filter(year == y) %>% 
    select(id1, id2, tradeflow_comtrade_o) %>% 
    mutate(tradeflow_comtrade_o = replace_na(tradeflow_comtrade_o, 0))
  
  graph <- subset %>% 
    graph_from_data_frame(vertices = country_list) %>% 
    simplify(edge.attr.comb = 'max') %>% 
    get.adjacency(attr = "tradeflow_comtrade_o") %>% 
    as(., 'TsparseMatrix')
  
  diag(graph) <- 0
  
  return(graph)
}, .progress = TRUE) 

trade_covar <- varDyadCovar(trade_list, warn = F)
```


## Combine
```{r}
df <- sienaDataCreate(pta_depend, dem_depend, ally_covar, trade_covar, dist_covar, gdp_covar)
```



# Estimation

## set effects
```{r}
# eff <- getEffects(df)
# mod <- sienaAlgorithmCreate(projname = "test", modelType = c(), n3=1000)
# test <- siena07(mod, data = df, effects = eff)

```


# to do  
consider what type of treaties we're looking at
what types of alliances we consider
which democracy index?
what to do about the 8 countries that are not in gravity but in vdem?
RateX effect set for missing values (manual p.32f), or not (zandberg 2018)
Questions:
 - allies -> isn't that a new network in itself? directed/not directed? nonaggression agreements?
 - distance -> as time varrying?
- continuous vs ordinal democracy